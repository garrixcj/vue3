# Build front-end static sources
# 編譯前腳本 (link等執行腳本)
.before_build:
  script:
    - ln -fs ${APP_ENV}/env.ts src/env/index.ts
    - ln -fs ${GAMEDICT_STATION}/game/index.js src/languages/gamedict/game.js
    - ln -fs ${GAMEDICT_STATION}/report/index.js src/languages/gamedict/report.js
    - ln -fs ${GAMEDICT_STATION}/relate/index.js src/languages/gamedict/relate.js
    - ln -fs ${GAMEDICT_STATION}/playtype/index.js src/languages/gamedict/playtype.js
    - ln -fs ${GAMEDICT_STATION}/round_result/index.js src/languages/gamedict/round_result.js

# 編譯前端 dist
.build_dist:
  image:
    name: gcr.io/rd6-project/platform/front/node:v16
  stage: build
  tags:
    - gce-gitlab-runner-ssd
  except:
    refs:
      - triggers
      - pipelines
  before_script:
    - echo 'yarn-offline-mirror ".yarn-cache/"' >> .yarnrc
    - echo 'yarn-offline-mirror-pruning true' >> .yarnrc
    - yarn install --frozen-lockfile --no-progress
  script:
    - pwd
    - ls -l node_modules/ | wc -l
    - !reference [.before_build, script]
    - yarn build 2>&1 | tee build_result.tmp
    - |
      if [[ `grep -w -E "failed" build_result.tmp` ]]
      then
        echo "Build failed"
        exit 1
      fi
    - ls -al
    - du -sh dist/
  cache:
    key:
      files:
        - yarn.lock
    paths:
      - .yarn-cache/
  artifacts:
    name: '$CI_COMMIT_SHORT_SHA'
    paths:
      - dist/
    expire_in: 5 mins

# 編譯開發 dist
build:dist:dev:
  extends: .build_dist
  only:
    refs:
      - dev
  variables:
    APP_ENV: dev
    GAMEDICT_STATION: qa
    GIT_SUBMODULE_STRATEGY: recursive

# 編譯測試 dist
build:dist:qa:
  extends: .build_dist
  only:
    refs:
      - qa
  variables:
    APP_ENV: qa
    GAMEDICT_STATION: qa
    GIT_SUBMODULE_STRATEGY: recursive

# 編譯正式 dist
build:dist:prod:
  extends: .build_dist
  only:
    refs:
      - master
      - hotfix
  variables:
    APP_ENV: prod
    GAMEDICT_STATION: prod
    GIT_SUBMODULE_STRATEGY: recursive
